alias gst='git status';
alias gci='git commit';
alias gco='git checkout';
alias gbr='git branch';
alias ggb='set target $(git branch | fzf | sed -e \'s/^ *[\*\+]* *//\'); and test -z $target; or git checkout $target';
alias glg='git log --oneline';
alias gpll='git pull';
alias gpsh='git push';
alias gadd='git add';
alias gstsh='git stash';
alias grb='git rebase';
alias gmrg='git merge';
alias gtag='git tag';
alias grsto='git restore';
alias grst='git reset';
alias grm='git rm';
alias gdff='git diff';
alias ggrep='git grep';
alias gfch='git fetch';
alias ggrph='git log --all --decorate --oneline --graph';
alias gsbtr='git subtree'
alias grmt='git remote'
alias gls='git ls-files'
alias ggc='git gc'
alias grflg='git reflog'
alias gshow='git show'
alias gwhich='git branch --show'
alias gsw='git switch'
# TODO: gcflt may produce unexpected numbers when not doing a 3-way merge. A modification is required to ensure a check to verify if an octopus merge is being performed
alias gcflt='gdff --check | grep \'conflict marker\' | awk -F \':\' \'{ print $1 }\' | sort -nr | uniq -c | awk -F \' \' \'BEGIN { red="\033[31m";blue="\033[34m";reset="\033[0m"} { print blue $2 reset ":" red $1/3 reset }\''
alias grv='git revert'
alias groot='git rev-parse --show-toplevel &>/dev/null && cd (git rev-parse --show-toplevel) || echo "Not in a git repo"'
alias gcp='git cherry-pick'
alias gmb='git merge-base'
alias gpwd='git status &>/dev/null && python -c \'import sys;from pathlib import Path;print(Path(sys.argv[2]).relative_to(Path(sys.argv[1])))\' (git rev-parse --show-toplevel) (pwd)'
alias gwt='git worktree'
alias gpath='git status &>/dev/null && python -c \'import sys;assert len(sys.argv) >= 3, "Missing argument";from pathlib import Path;print(Path(sys.argv[2]).absolute().relative_to(Path(sys.argv[1])))\' (git rev-parse --show-toplevel)'
